# FORGE CONFIG (DOT NOT REMOVE!)
include forge-conf/SOMEDOMAIN.com/before/*;

# redirect http to https
server {
    listen 80;
    server_name .SOMEDOMAIN.com;
    return 301 https://SOMEDOMAIN.com$request_uri;
}

# Cannonical domain rewrite to remove www., etc. An SSL certificate is required to do the redirect
server {
    # Listen for both IPv4 & IPv6 requests on port 443 with http2 enabled
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name *.SOMEDOMAIN.com;
    ssl_certificate /etc/nginx/ssl/SOMEDOMAIN.com/XXXXXX/server.crt;
    ssl_certificate_key /etc/nginx/ssl/SOMEDOMAIN.com/XXXXXX/server.key;
    return 301 https://SOMEDOMAIN.com$request_uri;
}

server {
    # Listen for both IPv4 & IPv6 requests on port 443 with http2 enabled
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name SOMEDOMAIN.com;
    root /home/forge/SOMEDOMAIN.com/public;
    index index.html index.htm index.php;
    charset utf-8;

    # 301 Redirect URLs with trailing /'s as per https://webmasters.googleblog.com/2010/04/to-slash-or-not-to-slash.html
    rewrite ^/(.*)/$ /$1 permanent;

    # Access and error logging
    access_log off;
    error_log  /var/log/nginx/SOMEDOMAIN.com-error.log error;

    # FORGE SSL (DO NOT REMOVE!)
    # ssl_certificate;
    # ssl_certificate_key;
    ssl_certificate /etc/nginx/ssl/SOMEDOMAIN.com/XXXXXX/server.crt;
    ssl_certificate_key /etc/nginx/ssl/SOMEDOMAIN.com/XXXXXX/server.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparams.pem;

    # FORGE CONFIG (DOT NOT REMOVE!)
    include forge-conf/SOMEDOMAIN.com/server/*;

    # Load configuration files from nginx-partials
    include /etc/nginx/nginx-partials/*.conf;

    # Root directory location handler
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Craft-specific location handlers to ensure AdminCP requests route through index.php
    # If you change your `cpTrigger`, change it here as well
    location ^~ /admin {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ^~ /cpresources {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # php-fpm configuration
        location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        fastcgi_param CRAFTENV_CRAFT_ENVIRONMENT "REPLACE_ME";
        fastcgi_param CRAFTENV_DB_HOST "REPLACE_ME";
        fastcgi_param CRAFTENV_DB_NAME "REPLACE_ME";
        fastcgi_param CRAFTENV_DB_USER "REPLACE_ME";
        fastcgi_param CRAFTENV_DB_PASS "REPLACE_ME";
        fastcgi_param CRAFTENV_SITE_URL "REPLACE_ME";
        fastcgi_param CRAFTENV_BASE_URL "REPLACE_ME";
        fastcgi_param CRAFTENV_BASE_PATH "REPLACE_ME";

        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        }

    location ~ /\.ht {
        deny all;
    }
}

# FORGE CONFIG (DOT NOT REMOVE!)
include forge-conf/SOMEDOMAIN.com/after/*;
